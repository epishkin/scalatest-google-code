<project name="ScalaTest" default="dist" basedir=".">

  <!-- set global properties for this build -->
  <property name="src" value="src"/>
  <property name="tests" value="tests"/>
  <property name="build" value="build"/>
  <property name="build.tests" value="build_tests"/>
  <property name="dist"  value="dist"/>
  <property name="doc"  value="doc"/>
  <property name="jdoc"  value="jdoc"/>
  <property name="zipper"  value="zipper"/>
  <property name="project.name"  value="ScalaTest"/>
  <property name="release" value="0.9.1"/>
  <property name="demo" value="demo"/>
  <property name="demodoc" value="demo/example/javadoc"/>
  <property name="example" value="demo/example"/>
  <property name="lib" value="lib"/>

  <!--
  <property name="build.compiler" value="jikes"/>
  -->

  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}"/>
    <mkdir dir="${build.tests}"/>
    <mkdir dir="${dist}"/>
    <mkdir dir="${demodoc}"/>
    <mkdir dir="${doc}"/>
    <mkdir dir="${jdoc}"/>
        <path id="scala.compile.class.path">
            <pathelement location="${lib}/scala-library.jar"/>
        </path>

        <path id="scala.tools.class.path">
            <pathelement location="${build}/tools"/>
            <pathelement location="${lib}/scala-library.jar"/>
        </path>

        <!-- this is the class path used to run ScalaTest to test itself, in the "test" target -->
        <path id="test.class.path">
            <pathelement location="${dist}/lib/scalatest.jar"/>
            <pathelement location="${lib}/scala-library.jar"/>
            <pathelement location="${lib}/testng-5.7-jdk15.jar"/>
        </path>

        <taskdef resource="scala/tools/ant/antlib.xml">
          <classpath>
            <pathelement location="${lib}/scala-compiler.jar"/>
            <pathelement location="${lib}/scala-library.jar"/>
          </classpath>
        </taskdef>


  </target>

  <target name="clean" depends="init">
  <delete dir="${build}"/>
  <delete dir="${build.tests}"/>
  <delete dir="${doc}"/>
  <delete dir="${jdoc}"/>
  <delete dir="${dist}"/>
  <delete dir="${zipper}"/>
  <!-- Clean out just the class files in the demo directory, because the demo source files
       are compiled into the same directory.  I.e., the class files sit alonside the java files.  -->
  <delete>
    <fileset dir="${demo}" includes="**/*.class"/>
  </delete>
  <delete dir="${demodoc}"/>

  </target>

  <target name="compile" depends="init">

    <!-- Compile the Java code from ${src} into ${build} -->
    <javac srcdir="${src}" destdir="${build}" classpath="${build}" debug="yes">
      <include name="org/scalatest/Ignore.java"/>
    </javac>
    <!-- Then compile the Scala code from ${src} into ${build} -->
    <scalac srcdir="${src}" destdir="${build}" classpath="${build}:${lib}/testng-5.7-jdk15.jar:${lib}/scala-library.jar"/>

    <!-- Compile EasySuite.scala from ${tests} into ${build.tests} -->
    <scalac srcdir="${tests}" destdir="${build.tests}" classpath="${build}:${build.tests}:${lib}/scala-library.jar">
      <include name="org/scalatest/EasySuite.scala"/>
    </scalac>
    <!-- Compile the Java code from ${tests} into ${build.tests} -->
    <javac srcdir="${tests}" destdir="${build.tests}" classpath="${build}:${lib}/scala-library.jar" debug="yes"/>
    <!-- Compile the rest of the Scala code from ${tests} into ${build.tests} -->
    <scalac srcdir="${tests}" destdir="${build.tests}" target="jvm-1.5" classpath="${build}:${build.tests}:${lib}/testng-5.7-jdk15.jar:${lib}/scala-library.jar"/>
    <copy file="${src}/org/scalatest/ScalaTestBundle.properties" todir="${build}/org/scalatest"/>
    <copy todir="${build}/images">
        <fileset dir="${src}/images"/>
    </copy>
  </target>

  <!-- Compile demo into its own directory. I.e., the class files will sit alongside the java files
       so that people can more easily look at them. All of these source files are used as demonstrations
       of something, usually described in articles on Artima.com. -->
  <target name="demo" depends="dist">
    <javac srcdir="${example}" destdir="${example}" classpath="${build}:${lib}/junit-4.1.jar" debug="yes"/>
  </target>

  <target name="doc" depends="compile">
      <javadoc sourcepath="${src}"
        destdir="${jdoc}"
        packagenames="org.scalatest"
        classpath="${build}"
        windowtitle="ScalaTest ${release}"
        doctitle="ScalaTest ${release}"
        bottom="Copyright (C) 2001-2008 Artima, Inc. All rights reserved."/>

    <scaladoc srcdir="${src}" destdir="${doc}" classpath="${build}:${lib}/scala-library.jar"
        windowtitle="ScalaTest ${release}"
        doctitle="ScalaTest ${release}"
        bottom="Copyright (C) 2001-2008 Artima, Inc. All rights reserved.">
         <include name="**/*.scala"/>
    </scaladoc>
<!--
      <javadoc sourcepath="${example}"
        destdir="${demodoc}"
        packagenames="com.artima.examples.*"
        classpath="${build}:${lib}/junit-4.1.jar"
        windowtitle="ScalaTest Examples ${release}"
        doctitle="ScalaTest Examples ${release}"
        bottom="Copyright (C) 2001-2008 Artima, Inc. All rights reserved."/>
-->
  </target>

  <target name="dist" depends="compile">
    <!-- Create the distribution directory -->
    <mkdir dir="${dist}/lib"/>
    <delete file="${dist}/lib/scalatest.jar"/>

    <!-- Put everything in ${build} into the MyProject-${DSTAMP}.jar file -->
    <jar jarfile="${dist}/lib/scalatest.jar" basedir="${build}"
        includes="org/scalatest/*.class, org/scalatest/*.properties, images/*">
        <manifest>
            <attribute name="Main-Class" value="org.scalatest.Runner"/>
        	<attribute name="Class-Path" value="junit-4.1.jar"/>
        </manifest>
     </jar>
     <jar jarfile="${dist}/lib/scalatest-wbt.jar" basedir="${build.tests}"
        includes="org/scalatest/*.class"/>

	 <echo message="All finished building ${project.name}!"/>
  </target>

  <target name="zipper" depends="allfiles">
    <delete dir="${zipper}"/>
    <mkdir dir="${zipper}"/>

    <copy file="${dist}/lib/scalatest.jar"
		tofile="${zipper}/scalatest-${release}/scalatest-${release}.jar"/>
    <copy file="${dist}/lib/scalatest-wbt.jar"
		tofile="${zipper}/scalatest-${release}/scalatest-${release}-tests.jar"/>

    <copy file="README.txt"
		tofile="${zipper}/scalatest-${release}/README.txt"/>
    <copy file="LICENSE"
		tofile="${zipper}/scalatest-${release}/LICENSE"/>
    <copy file="NOTICE"
		tofile="${zipper}/scalatest-${release}/NOTICE"/>

    <copy todir="${zipper}/scalatest-${release}/doc">
        <fileset dir="${doc}/"/>
    </copy>

    <copy todir="${zipper}/scalatest-${release}/src">
        <fileset dir="${src}/"/>
    </copy>

    <copy todir="${zipper}/scalatest-${release}/tests">
        <fileset dir="${tests}/"/>
    </copy>

<!--
    <zip zipfile="${zipper}/scalatest-${release}/scalatest-${release}-src.zip" basedir="${src}"/>
    <zip zipfile="${zipper}/scalatest-${release}/scalatest-${release}-tests-src.zip" basedir="${tests}"/>
-->

    <zip zipfile="scalatest-${release}.zip" basedir="${zipper}"/>
  </target>

    <target name="test" depends="dist">
    <!-- Delete the ${build} and ${dist} directory trees -->
    <java classname="org.scalatest.Runner" classpathref="test.class.path" fork="true">

        <arg value="-p"/>
        <arg value="build_tests build"/>

       <arg value="-g"/>
       <arg value="-o"/>

    	<arg value="-m"/>
    	<arg value="org.scalatest"/>
 
    	<arg value="-m"/>
    	<arg value="org.scalatest.fun"/>
 
    	<arg value="-m"/>
    	<arg value="org.scalatest.testng"/>
    </java>
  </target>

  <target name="allfiles" depends="dist, doc, demo"/>

</project>

